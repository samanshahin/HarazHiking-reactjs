[{"C:\\Users\\Saman Shahin\\reactjs-sampleapp\\src\\App.js":"1","C:\\Users\\Saman Shahin\\reactjs-sampleapp\\src\\reportWebVitals.js":"2","C:\\Users\\Saman Shahin\\reactjs-sampleapp\\src\\index.js":"3","C:\\Users\\Saman Shahin\\reactjs-sampleapp\\src\\Items\\ItemsList.js":"4","C:\\Users\\Saman Shahin\\reactjs-sampleapp\\src\\Items\\ItemsSlice.js":"5","C:\\Users\\Saman Shahin\\reactjs-sampleapp\\src\\data\\data.js":"6","C:\\Users\\Saman Shahin\\reactjs-sampleapp\\src\\app\\store.js":"7","C:\\Users\\Saman Shahin\\reactjs-sampleapp\\src\\Items\\AddItemForm.js":"8","C:\\Users\\Saman Shahin\\reactjs-sampleapp\\src\\data\\hardness.js":"9","C:\\Users\\Saman Shahin\\reactjs-sampleapp\\src\\app\\Navbar.js":"10","C:\\Users\\Saman Shahin\\reactjs-sampleapp\\src\\app\\Footer.js":"11"},{"size":468,"mtime":1607064155578,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"13"},{"size":337,"mtime":1607060854961,"results":"15","hashOfConfig":"13"},{"size":1314,"mtime":1607151398552,"results":"16","hashOfConfig":"13"},{"size":799,"mtime":1607060878293,"results":"17","hashOfConfig":"13"},{"size":1271,"mtime":1607150257723,"results":"18","hashOfConfig":"13"},{"size":189,"mtime":1606984578306,"results":"19","hashOfConfig":"13"},{"size":4143,"mtime":1607063363611,"results":"20","hashOfConfig":"13"},{"size":255,"mtime":1607003474864,"results":"21","hashOfConfig":"13"},{"size":1999,"mtime":1607063129805,"results":"22","hashOfConfig":"13"},{"size":542,"mtime":1607062950250,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1h0z0d0",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Saman Shahin\\reactjs-sampleapp\\src\\App.js",[],"C:\\Users\\Saman Shahin\\reactjs-sampleapp\\src\\reportWebVitals.js",[],"C:\\Users\\Saman Shahin\\reactjs-sampleapp\\src\\index.js",[],"C:\\Users\\Saman Shahin\\reactjs-sampleapp\\src\\Items\\ItemsList.js",["49","50","51","52","53","54"],"import React, { useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nimport {\r\n  adminUsrname, itemsData\r\n} from './ItemsSlice'\r\n\r\nexport const ItemsList = () => {\r\n\r\n  //const admin = useSelector(adminUsrname)\r\n  const items = useSelector(state => state.items.itemsData)\r\n\r\n  const content = items.map(item => (\r\n      <div key={item.title} className='col-md-4'>\r\n        <div className='card mb-4 shadow-sm'>\r\n          <img src={item.imageLink} width='100%' height='100%' />\r\n          <div className='card-body'>\r\n            <h3> {item.title} </h3>\r\n            <p className='card-text'>{item.desc}</p>\r\n            <div className='d-flex justify-content-between align-items-center'>\r\n              <div className='btn-group'>\r\n                <button type='button' className='btn btn-sm btn-danger'>{item.hardness}</button>\r\n                <button type='button' className='btn btn-sm btn-success'>{item.distance} km</button>\r\n                <button type='button' className='btn btn-warning btn-sm'>\r\n                  <a href={item.mapLink} target=\"_blank\">Show On Map</a>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  ))\r\n\r\n  return (\r\n    <div className='row'>\r\n      {content}\r\n    </div>\r\n  )\r\n}\r\n",["55","56"],"C:\\Users\\Saman Shahin\\reactjs-sampleapp\\src\\Items\\ItemsSlice.js",["57"],"C:\\Users\\Saman Shahin\\reactjs-sampleapp\\src\\data\\data.js",[],"C:\\Users\\Saman Shahin\\reactjs-sampleapp\\src\\app\\store.js",[],"C:\\Users\\Saman Shahin\\reactjs-sampleapp\\src\\Items\\AddItemForm.js",["58","59","60","61"],"import React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n//import { unwrapResult } from '@reduxjs/toolkit'\r\n\r\nimport { itemAdded, hardness, AdminCode } from './ItemsSlice'\r\n\r\nexport const AddItemForm = () => {\r\n  const [title, setTitle] = useState('')\r\n  const [desc, setDesc] = useState('')\r\n  const [hardness, setHardness] = useState('')\r\n  const [dist, setDistance] = useState('')\r\n  const [imglnk, setImgLnk] = useState('')\r\n  const [maplnk, setMapLnk] = useState('')\r\n  const [admincode, setAdminCode] = useState('')\r\n\r\n  const hardnessOpts = useSelector(state => state.items.hardness)\r\n  const adncode = useSelector(state => state.items.AdminCode)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const onTitleChanged = (e) => setTitle(e.target.value)\r\n  const onDescChanged = (e) => setDesc(e.target.value)\r\n  const onHardnessChanged = (e) => setHardness(e.target.value)\r\n  const onDistChanged = (e) => setDistance(e.target.value)\r\n  const onImgLnkChanged = (e) => setImgLnk(e.target.value)\r\n  const onMapLnkChanged = (e) => setMapLnk(e.target.value)\r\n  const onAdminCodeChanged = (e) => setAdminCode(e.target.value)\r\n\r\n  const canSave = [title, desc, hardness, dist, imglnk, maplnk].every(Boolean)\r\n\r\n  const onSaveItemClicked = () => {\r\n    if (canSave && admincode == adncode) {\r\n      dispatch(itemAdded({ title, desc, hardness, dist, imglnk, maplnk }))\r\n      setTitle('')\r\n      setDesc('')\r\n      setHardness('')\r\n      setDistance('')\r\n      setImgLnk('')\r\n      setMapLnk('')\r\n    }\r\n  }\r\n\r\n  const hardnessOptions = hardnessOpts.map((item) => (\r\n    <option key={item.title} value={item.title}>\r\n      {item.title}\r\n    </option>\r\n  ))\r\n\r\n\r\n  return (\r\n    <section>\r\n      <h3 className=\"mb-3\" className=\"text-white\">Track Information</h3>\r\n      <form className=\"needs-validation\" novalidate>\r\n        <label htmlFor=\"trackTitle\" className=\"text-white\">Track Title:</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"trackTitle\"\r\n          className=\"form-control\"\r\n          name=\"trackTitle\"\r\n          placeholder=\"From-To Places\"\r\n          value={title}\r\n          onChange={onTitleChanged}\r\n        />\r\n        <label htmlFor=\"desc\" className=\"text-white\">Description:</label>\r\n        <textarea\r\n          type=\"text\"\r\n          id=\"desc\"\r\n          className=\"form-control\"\r\n          name=\"Description\"\r\n          placeholder=\"Add Description\"\r\n          value={desc}\r\n          onChange={onDescChanged}\r\n        />\r\n        <label htmlFor=\"hardness\" className=\"text-white\">Hardness:</label>\r\n        <select\r\n          id=\"hardness\"\r\n          className=\"custom-select d-block w-100\"\r\n          value={hardness}\r\n          onChange={onHardnessChanged}>\r\n          <option value=\"\"></option>\r\n          {hardnessOptions}\r\n        </select>\r\n        <label htmlFor=\"distance\" className=\"text-white\">Distance:</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"distance\"\r\n          className=\"form-control\"\r\n          name=\"Distance\"\r\n          placeholder=\"Distance in km\"\r\n          value={dist}\r\n          onChange={onDistChanged}\r\n        />\r\n        <label htmlFor=\"imglnk\" className=\"text-white\">Image Link:</label>\r\n        <input\r\n          id=\"imglnk\"\r\n          className=\"form-control\"\r\n          name=\"imglnk\"\r\n          value={imglnk}\r\n          onChange={onImgLnkChanged}\r\n        />\r\n        <label htmlFor=\"maplnk\" className=\"text-white\">Map Link:</label>\r\n        <input\r\n          id=\"maplnk\"\r\n          className=\"form-control\"\r\n          name=\"maplnk\"\r\n          value={maplnk}\r\n          onChange={onMapLnkChanged}\r\n        />\r\n        <label htmlFor=\"admincode\" className=\"text-white\">AdminCode:</label>\r\n        <input\r\n          id=\"admincode\"\r\n          className=\"form-control\"\r\n          name=\"admincode\"\r\n          value={admincode}\r\n          onChange={onAdminCodeChanged}\r\n        />\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-primary btn-lg btn-block\"\r\n          onClick={onSaveItemClicked}\r\n          disabled={!canSave}>\r\n          Save Item\r\n        </button>\r\n      </form>\r\n    </section>\r\n  )\r\n}\r\n","C:\\Users\\Saman Shahin\\reactjs-sampleapp\\src\\data\\hardness.js",[],"C:\\Users\\Saman Shahin\\reactjs-sampleapp\\src\\app\\Navbar.js",["62","63"],"C:\\Users\\Saman Shahin\\reactjs-sampleapp\\src\\app\\Footer.js",["64"],{"ruleId":"65","severity":1,"message":"66","line":1,"column":17,"nodeType":"67","messageId":"68","endLine":1,"endColumn":26},{"ruleId":"65","severity":1,"message":"69","line":2,"column":23,"nodeType":"67","messageId":"68","endLine":2,"endColumn":34},{"ruleId":"65","severity":1,"message":"70","line":5,"column":3,"nodeType":"67","messageId":"68","endLine":5,"endColumn":15},{"ruleId":"65","severity":1,"message":"71","line":5,"column":17,"nodeType":"67","messageId":"68","endLine":5,"endColumn":26},{"ruleId":"72","severity":1,"message":"73","line":16,"column":11,"nodeType":"74","endLine":16,"endColumn":66},{"ruleId":"75","severity":1,"message":"76","line":25,"column":42,"nodeType":"77","endLine":25,"endColumn":57},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"65","severity":1,"message":"82","line":1,"column":23,"nodeType":"67","messageId":"68","endLine":1,"endColumn":39},{"ruleId":"65","severity":1,"message":"83","line":5,"column":21,"nodeType":"67","messageId":"68","endLine":5,"endColumn":29},{"ruleId":"65","severity":1,"message":"84","line":5,"column":31,"nodeType":"67","messageId":"68","endLine":5,"endColumn":40},{"ruleId":"85","severity":1,"message":"86","line":32,"column":30,"nodeType":"87","messageId":"88","endLine":32,"endColumn":32},{"ruleId":"89","severity":1,"message":"90","line":52,"column":28,"nodeType":"77","endLine":52,"endColumn":50},{"ruleId":"91","severity":1,"message":"92","line":18,"column":21,"nodeType":"74","endLine":18,"endColumn":56},{"ruleId":"91","severity":1,"message":"92","line":26,"column":11,"nodeType":"74","endLine":26,"endColumn":74},{"ruleId":"91","severity":1,"message":"92","line":8,"column":21,"nodeType":"74","endLine":8,"endColumn":33},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useDispatch' is defined but never used.","'adminUsrname' is defined but never used.","'itemsData' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","no-native-reassign",["93"],"no-negated-in-lhs",["94"],"'createAsyncThunk' is defined but never used.","'hardness' is defined but never used.","'AdminCode' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react/jsx-no-duplicate-props","No duplicate props allowed","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation"]